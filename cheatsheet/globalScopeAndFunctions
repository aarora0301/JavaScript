Anything that is not initialised in java is considered as undefined
example:
1. var b; console.log(b)// prints undefined
2. var c=10; console.log(c)// prints 10
3. d=10; console.log(d)//prints 10
In JavaScript, scope refers to the visibility of variables. Variables which are defined outside of a function block have Global scope.
 This means, they can be seen everywhere in your JavaScript code.

Variables which are used without the var keyword are automatically created in the global scope. This can create unintended consequences elsewhere 
in your code or when running a function again. You should always declare your variables with var

Example:
 
1.  var myGlobal= 10;

function fun1() {
   var oopsGlobal=5;
  
}

function fun2() {
  var output = "";
  if (typeof myGlobal != "undefined") {
    output += "myGlobal: " + myGlobal;
  }
  if (typeof oopsGlobal != "undefined") {
    output += " oopsGlobal: " + oopsGlobal;
  }
  console.log(output);
}
// prints myGlobal: 10


2.   var myGlobal= 10;

function fun1() {
    oopsGlobal=5; // missing var here: as var is not used with the variable so it has the global scope now and
                   // can be accessed anywhere inside the file
  }

function fun2() {
  var output = "";
  if (typeof myGlobal != "undefined") {
    output += "myGlobal: " + myGlobal;
  }
  if (typeof oopsGlobal != "undefined") {
    output += " oopsGlobal: " + oopsGlobal;
  }
  console.log(output);
}

// prints myGlobal: 10 , oopsGlobal : 5;
